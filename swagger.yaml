openapi: 3.0.0
info:
  title: Nodejs-REST-API
  description: Nodejs RESTful API Application using Express JS & Mongo DB
  version: 1.0.0
servers:
  - url: 'http://{{localhost:3000}}'
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Authentication
    description: Authentication Functionality in RESTful API Express JS App
  - name: Products
    description: CRUD Opreations for Product
  - name: Users
    description: CRUD Opretions for User
paths:
  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: osama
                email: osama@gmail.com
                password: '123456'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: osama@gmail.com
                password: '123456'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/me:
    get:
      tags:
        - Authentication
      summary: Get Authenticated User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: osama@gmail.com
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/reset-password/8a782dbf4e4bb6b08d7b948fee47484d6f94103bd03f0817cd2939a9cfa88b57:
    post:
      tags:
        - Authentication
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                password: '1234567'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/products/6595d268e33e29edb4902142:
    get:
      tags:
        - Products
      summary: Get Product
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Products
      summary: Delete Product
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/products:
    get:
      tags:
        - Products
      summary: Get All Products
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Products
      summary: Create Product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: product 8
                description:
                  type: string
                  example: product 8 description
                file:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/products/6595ea5b093a9b31f5a30fed:
    put:
      tags:
        - Products
      summary: Update Product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: product 3 updated
                description: description of product  updated
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/65974f5f709683022f1ea7f9:
    get:
      tags:
        - Users
      summary: Get User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/users:
    get:
      tags:
        - Users
      summary: Get All Users
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Users
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: samir
                email: samir@gmail.com
                password: '123456'
                role: user
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/65993c96dd8af88b692894d4:
    put:
      tags:
        - Users
      summary: Update User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: samir updated
                email: samir_updated@gmail.com
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/6595cf121bc7d0cdf62ba017:
    delete:
      tags:
        - Users
      summary: Delete User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
